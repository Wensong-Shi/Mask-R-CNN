"""
Hyperparameter config
"""

# dataset
DATASET_ROOT_DIR = 'coco'
NUM_CLASSES = 81
NUM_WORKERS = 2  # 可根据CPU核心数修改
PIN_MEMORY = False  # 如果内存充足可以设置为True，以此来提高速度
BATCH_SIZE = 1
# 这里我计算的这组数值可能存在问题
IMAGE_NORMALIZE_INFO = {'mean_rgb': (0.4694, 0.4460, 0.4066), 'std_rgb': (0.2793, 0.2745, 0.2882)}  # 可根据自己的数据集计算并修改
SHORT_SIDE = 800

# anchors
ANCHOR_SIZES = [32, 64, 128, 256, 512]
ANCHOR_RATIOS = [0.5, 1, 2]
# RPN, RoIs
FEATURE_STRIDES = [4, 8, 16, 32, 64]
TOP_N_PRE_NMS_RPN_TRAIN = 12000
TOP_N_POST_NMS_RPN_TRAIN = 2000
THRESH_NMS_RPN_TRAIN = 0.7
OVERLAP_POSITIVE_RPN_TRAIN = 0.7
HI_OVERLAP_NEGATIVE_RPN_TRAIN = 0.3
LO_OVERLAP_NEGATIVE_RPN_TRAIN = 0.1
NUM_SAMPLES_RPN_TRAIN = 256
FG_FRACTION_RPN_TRAIN = 0.5
NUM_SAMPLES_ROI_TRAIN = 512
FG_FRACTION_ROI_TRAIN = 0.25
HI_OVERLAP_ROI_TRAIN = 0.5
# LO_OVERLAP_ROI_TRAIN = 0.1
TOP_N_PRE_NMS_RPN_TEST = 6000
TOP_N_POST_NMS_RPN_TEST = 1000
THRESH_NMS_RPN_TEST = 0.7

# optimizer
MOMENTUM = 0.9
WEIGHT_DECAY = 0.0001
LR = [2e-2, 2e-3]
LR_ADJUST_EPOCH = 24
MAX_EPOCH = 32
IS_WARMUP = True
NUM_WARMUP_ITERS = 1600
MAX_NORM_GRAD_CLIP = 35  # 可根据total_norm来调整

# results
BACKUP_DIR_TRAIN = 'train_backup'
LOGFILE_TRAIN = 'train_backup/train.log'
BACKUP_DIR_TEST = 'test_backup'
LOGFILE_TEST = 'test_backup/test.log'
PATH_RESULTS = 'test_backup/results.json'
